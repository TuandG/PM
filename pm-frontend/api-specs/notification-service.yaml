openapi: 3.0.3
info:
  title: Notification Service API
  description: API for managing notifications, settings, and delivery channels in the Scrum Management System
  version: 1.0.0
  contact:
    name: Scrum Management Team
    email: support@scrummanagement.com

servers:
  - url: https://api.scrummanagement.com/notification-service/v1
    description: Production server
  - url: https://staging-api.scrummanagement.com/notification-service/v1
    description: Staging server

paths:
  /notifications:
    get:
      summary: Get notifications for current user
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [Task, Comment, Mention, System]
        - name: isRead
          in: query
          schema:
            type: boolean
        - name: resourceType
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationResponse'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  unreadCount:
                    type: integer

    post:
      summary: Create a new notification
      tags:
        - Notifications
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - type
                - title
                - content
                - channels
              properties:
                userId:
                  type: string
                  format: uuid
                type:
                  type: string
                  enum: [Task, Comment, Mention, System]
                title:
                  type: string
                content:
                  type: string
                resourceType:
                  type: string
                resourceId:
                  type: string
                  format: uuid
                channels:
                  type: array
                  items:
                    type: string
                    enum: [email, in-app, push]
      responses:
        '201':
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'

  /notifications/{notificationId}:
    get:
      summary: Get notification by ID
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '404':
          description: Notification not found

    put:
      summary: Update notification
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isRead:
                  type: boolean
      responses:
        '200':
          description: Notification updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'

    delete:
      summary: Delete notification
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification deleted successfully

  /notifications/mark-all-read:
    put:
      summary: Mark all notifications as read for current user
      tags:
        - Notifications
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [Task, Comment, Mention, System]
                  description: Optional filter to mark only specific type as read
      responses:
        '200':
          description: All notifications marked as read successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  updatedCount:
                    type: integer

  /notifications/bulk-delete:
    delete:
      summary: Delete multiple notifications
      tags:
        - Notifications
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notificationIds
              properties:
                notificationIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          description: Notifications deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedCount:
                    type: integer

  /projects/{projectId}/notification-settings:
    get:
      summary: Get notification settings for a project
      tags:
        - Notification Settings
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
            description: Get settings for specific user (admin only)
      responses:
        '200':
          description: Notification settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsResponse'

    post:
      summary: Create or update notification settings for a project
      tags:
        - Notification Settings
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - emailEnabled
                - inAppEnabled
                - eventTypes
              properties:
                emailEnabled:
                  type: boolean
                inAppEnabled:
                  type: boolean
                eventTypes:
                  type: array
                  items:
                    type: string
                    enum: [task_assigned, task_updated, task_commented, mention, sprint_started, sprint_completed, daily_reminder]
      responses:
        '201':
          description: Notification settings created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsResponse'
        '200':
          description: Notification settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsResponse'

  /projects/{projectId}/notification-settings/{userId}:
    get:
      summary: Get notification settings for specific user in project
      tags:
        - Notification Settings
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsResponse'

    put:
      summary: Update notification settings for specific user in project
      tags:
        - Notification Settings
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailEnabled:
                  type: boolean
                inAppEnabled:
                  type: boolean
                eventTypes:
                  type: array
                  items:
                    type: string
                    enum: [task_assigned, task_updated, task_commented, mention, sprint_started, sprint_completed, daily_reminder]
      responses:
        '200':
          description: Notification settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsResponse'

    delete:
      summary: Delete notification settings for specific user in project
      tags:
        - Notification Settings
      security:
        - bearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification settings deleted successfully

  /notifications/send:
    post:
      summary: Send notification to multiple users
      tags:
        - Notification Delivery
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userIds
                - type
                - title
                - content
                - channels
              properties:
                userIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                type:
                  type: string
                  enum: [Task, Comment, Mention, System]
                title:
                  type: string
                content:
                  type: string
                resourceType:
                  type: string
                resourceId:
                  type: string
                  format: uuid
                channels:
                  type: array
                  items:
                    type: string
                    enum: [email, in-app, push]
                projectId:
                  type: string
                  format: uuid
                  description: Optional project context for filtering by user settings
      responses:
        '200':
          description: Notifications sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sentCount:
                    type: integer
                  failedCount:
                    type: integer
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                          format: uuid
                        status:
                          type: string
                          enum: [sent, failed, skipped]
                        reason:
                          type: string

  /notifications/templates:
    get:
      summary: Get notification templates
      tags:
        - Templates
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [Task, Comment, Mention, System]
        - name: channel
          in: query
          schema:
            type: string
            enum: [email, in-app, push]
      responses:
        '200':
          description: Notification templates retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationTemplateResponse'

    post:
      summary: Create notification template
      tags:
        - Templates
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
                - channel
                - subject
                - body
              properties:
                name:
                  type: string
                type:
                  type: string
                  enum: [Task, Comment, Mention, System]
                channel:
                  type: string
                  enum: [email, in-app, push]
                subject:
                  type: string
                body:
                  type: string
                variables:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Notification template created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateResponse'

components:
  schemas:
    NotificationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        type:
          type: string
          enum: [Task, Comment, Mention, System]
        title:
          type: string
        content:
          type: string
        resourceType:
          type: string
        resourceId:
          type: string
          format: uuid
        isRead:
          type: boolean
        channels:
          type: array
          items:
            type: string
            enum: [email, in-app, push]
        deliveryStatus:
          type: object
          properties:
            email:
              type: string
              enum: [pending, sent, failed, delivered]
            inApp:
              type: string
              enum: [pending, sent, failed, delivered]
            push:
              type: string
              enum: [pending, sent, failed, delivered]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        readAt:
          type: string
          format: date-time

    NotificationSettingsResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        emailEnabled:
          type: boolean
        inAppEnabled:
          type: boolean
        eventTypes:
          type: array
          items:
            type: string
            enum: [task_assigned, task_updated, task_commented, mention, sprint_started, sprint_completed, daily_reminder]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    NotificationTemplateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum: [Task, Comment, Mention, System]
        channel:
          type: string
          enum: [email, in-app, push]
        subject:
          type: string
        body:
          type: string
        variables:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT